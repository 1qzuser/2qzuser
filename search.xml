<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo安装、下载使用butterfly主题、部署到GiThub</title>
      <link href="/2022/01/15/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/"/>
      <url>/2022/01/15/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="hexo安装、下载使用butterfly主题、部署到GiThub"><a href="#hexo安装、下载使用butterfly主题、部署到GiThub" class="headerlink" title="hexo安装、下载使用butterfly主题、部署到GiThub"></a>hexo安装、下载使用butterfly主题、部署到GiThub</h3><p>安装前提：</p><ul><li><p>注册github</p></li><li><p>安装git</p></li><li><p>安装node.js</p></li></ul><h4 id="一、安装hexo"><a href="#一、安装hexo" class="headerlink" title="一、安装hexo"></a>一、安装hexo</h4><p>1、建立一个文件夹 Blog（可以自己取名字），进入文件夹标右键打开 Git Bush Here，输入npm命令安装Hexo：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>2、安装完成后，输入 hexo init 命令初始化博客：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>3、静态部署</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g  #静态部署</span><br><span class="line">hexo s  #启动</span><br></pre></td></tr></table></figure><p>访问  <a href="http://localhost:4000/">http://localhost:4000</a>  查看</p><h4 id="二、安装butterfly主题"><a href="#二、安装butterfly主题" class="headerlink" title="二、安装butterfly主题"></a>二、安装butterfly主题</h4><p>1、在hexo项目根目录下执行操作clone主题</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>2、如果沒有 pug 以及 stylus 的渲染器，还需要下载，否则在项目运行时会报错：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>3、修改项目根目录下的_config.yml文件（称为站点配置文件），开启主题</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">#theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><p>4、升级建议</p><p>为了減少升级主题带来的不便，我们还需要做以下操作：<br> 把主题文件夹中的 <code>_config.yml</code> 复制到 Hexo 根目录下，同重命名为 <code>_config.butterfly.yml</code></p><h4 id="三、将Hexo部署到GiThub"><a href="#三、将Hexo部署到GiThub" class="headerlink" title="三、将Hexo部署到GiThub"></a>三、将Hexo部署到GiThub</h4><h5 id="1-绑定GitHub"><a href="#1-绑定GitHub" class="headerlink" title="1.绑定GitHub"></a>1.绑定GitHub</h5><p>（1）输入 ssh 命令，查看本机是否安装 SSH：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh</span><br></pre></td></tr></table></figure><p>（2）已安装 SSH</p><p>输入 ssh-keygen -t rsa 指定 RSA 算法生成密钥，然后一路回车键，之后就就会生成两个文件，分别为秘钥 id_rsa 和公钥 id_rsa.pub.</p><p>注意观察  .ssh文件夹的生成位置</p><p>（3）在github上添加ssh公钥</p><p>复制公钥 id_rsa.pub 文件里的内容,进入我们的 GitHub 主页，先点击右上角，再点击 settings,先点击 SSH and GPG keys，再点击 New SSH key 添加</p><p>（4）通过在 Git Bash 中输入命令进行检验是否成功</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h5 id="2、部署到GiThub"><a href="#2、部署到GiThub" class="headerlink" title="2、部署到GiThub"></a>2、部署到GiThub</h5><p>（1）打开根目录下的 _config.yml文件夹，在文件底部添加内容</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/xxx/xxx.github.io.git</span>  <span class="comment">#你的仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>（2）回到 Blog 文件夹中，打开 Git Bash，安装Git部署插件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>（3）继续输入命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span><br><span class="line">hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure><p>完成以后，输入 <a href="https://link.zhihu.com/?target=https://fengye97.github.io/">https://xxx.github.io</a> 访问查看（xxx是你的github用户名）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/11/hello-world/"/>
      <url>/2022/01/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
